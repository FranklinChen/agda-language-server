# modified from https://github.com/simonmichael/hledger/blob/master/.github/workflows/mac.yml

name: CI (macOS)

on: [push, pull_request]

jobs:
  build:
    runs-on: macos-latest
    steps:

    - name: üì• Checkout repository
      uses: actions/checkout@v2

    # things to be cached/restored:

    - name: üíæ Cache stack global package db
      id:   stack-global
      uses: actions/cache@v2
      with:
        path: ~/.stack
        key: ${{ runner.os }}-stack-global-after20210110-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-global-after202110110
    - name: üíæ Cache stack-installed programs in ~/.local/bin
      id:   stack-programs
      uses: actions/cache@v2
      with:
        path: ~/.local/bin
        key: ${{ runner.os }}-stack-programs-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-programs
    - name: üíæ Cache .stack-work
      uses: actions/cache@v2
      with:
        path: .stack-work
        key: ${{ runner.os }}-stack-work-${{ hashFiles('**.yaml') }}
        restore-keys: |
             ${{ runner.os }}-stack-work
    - name: üíæ Cache agda-language-server/.stack-work
      uses: actions/cache@v2
      with:
        path: agda-language-server/.stack-work
        key: ${{ runner.os }}-agda-language-server-stack-work-${{ hashFiles('agda-language-server/package.yaml') }}
        restore-keys: |
             ${{ runner.os }}-agda-language-server-stack-work

    # actions:

    - name: ‚è¨ Install stack
      run: |
        mkdir -p ~/.local/bin
        export PATH=~/.local/bin:$PATH        
        # brew install gnu-tar; curl -sL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | gtar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack
        if [[ ! -x ~/.local/bin/stack ]]; then brew install gnu-tar; curl -sL https://get.haskellstack.org/stable/osx-x86_64.tar.gz | gtar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'; chmod a+x ~/.local/bin/stack; fi
        stack --version
    - name: ‚è¨ Install GHC
      run: |
        stack setup --install-ghc

    - name: ‚è¨ Install haskell deps
      run: |
        stack build --only-dependencies

    - name: üî® Build and run tests
      run: |
        stack test


    # artifacts:

    - name: üì¶ Install the executable
      id: install
      run: |
        stack install
        cp ~/.local/bin/als .

    - name: üì¶ Some linker shit
      id: link
      env:
        ICU_VER: '69'
        ICU_DIR: '/usr/local/opt/icu4c/lib'
      run: |
        # Change the path to the dynamic library icu4c to the run-time search path:
        #
        # 1. the same directory of executable, i.e. @executable_path
        # 2. @executable_path/../lib
        # 3. the default location of system-wide icu4c installed by homebrew, ie. /usr/local/opt/icu4c/lib
        #
        ls ${ICU_DIR}
        mkdir lib
        cp ${ICU_DIR}/libicuuc.${ICU_VER}.dylib ${ICU_DIR}/libicui18n.${ICU_VER}.dylib ${ICU_DIR}/libicudata.${ICU_VER}.dylib lib
        ls lib
        install_name_tool -change ${ICU_DIR}/libicuuc.${ICU_VER}.dylib @rpath/libicuuc.${ICU_VER}.dylib als
        install_name_tool -change ${ICU_DIR}/libicui18n.${ICU_VER}.dylib @rpath/libicui18n.${ICU_VER}.dylib als
        install_name_tool -add_rpath @executable_path -add_rpath @executable_path/../lib -add_rpath ${ICU_DIR} als
        otool -L als
        file als 

    - name: üì¶ Zip the executable
      id: zip
      run: |
        zip -r als als
        mv als.zip als-macos.zip

    - name: üö¢ Release Artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/') # so that only commits with a git tag would upload artifacts
      with:
        files: als-macos.zip
        draft: true
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}